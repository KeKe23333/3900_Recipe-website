<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yyds.recipe.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.yyds.recipe.model.User">
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="first_name" property="firstName" jdbcType="VARCHAR"/>
        <result column="last_name" property="lastName" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="birthdate" property="birthdate" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="profile_photo" property="profilePhoto" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserAccountResultMap" type="com.yyds.recipe.model.LoginUser">
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="saveUser" parameterType="com.yyds.recipe.model.User">
        insert into recipe.user(user_id, email, first_name, last_name, nick_name, birthdate, gender,
                                create_time)
        values (#{userId}, #{email}, #{firstName}, #{lastName}, #{nickName}, #{birthdate}, #{gender}, #{createTime});
    </insert>

    <insert id="saveUserAccount" parameterType="com.yyds.recipe.model.User">
        insert into recipe.user_account(user_id, password, salt)
        values (#{userId}, #{password}, #{salt})
    </insert>

    <update id="editUser" parameterType="com.yyds.recipe.model.User">
        update recipe.user
        <set>
            <if test="firstName != null">
                first_name=#{firstName},
            </if>
            <if test="lastName != null">
                last_name=#{lastName},
            </if>
            <if test="nickName != null">
                nick_name=#{nickName},
            </if>
            <if test="birthdate != null">
                birthdate=#{birthdate},
            </if>
            <if test="gender">
                gender=#{gender},
            </if>
            <if test="profilePhoto != null">
                profile_photo=#{profilePhoto}
            </if>
        </set>
        <where>
            user_id=#{userId}
        </where>
    </update>

    <select id="getLoginUserInfo" resultMap="UserAccountResultMap" parameterType="java.lang.String">
        select ua.user_id, ua.password, u.email
        from recipe.user_account ua
                 inner join recipe.user u
                            on ua.user_id = u.user_id
        where u.email = #{email}
    </select>

    <select id="getUserByEmail" parameterType="java.lang.String" resultMap="UserResultMap">
        select u.user_id,
               u.email,
               u.first_name,
               u.last_name,
               u.nick_name,
               ua.password,
               ua.salt,
               u.birthdate,
               u.gender,
               u.contact,
               u.address,
               u.create_time,
               u.profile_photo
        from recipe.user u
                 left join recipe.user_account ua on u.user_id = ua.user_id;
    </select>

</mapper>